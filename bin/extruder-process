#!/usr/bin/ruby

$:.unshift File.join(File.dirname(__FILE__), '..', 'lib')
$:.unshift File.join(File.dirname(__FILE__), '..', 'processors')

require 'optparse'
require 'extruder'
require 'extruder/mail'

options = {config: [], processors: []}
process = nil
split_on = "\n"

OptionParser.new do |opts|
  opts.banner = 'Usage: extruder-process [-q [-c config-file] | -F [-0]]'

  opts.on('-c', '--config-file CONFIG-FILE') do |file|
    options[:config] = file
  end

  opts.on('-p', '--processor PROCESSOR-NAME') do |name|
    options[:processors] << name
  end

  opts.on('-q', '--queue') do
    process = 'queue'
  end

  opts.on('-F', '--from-file') do
    process = 'file'
  end

  opts.on('-0') do
    split_on = "\0"
  end
end.parse!

config = Extruder::Config.new options[:config]
case process
  when 'queue'
    items = Extruder::Queue.new config.location(:queue)
  when 'file'
    files = $stdin.read.split(split_on)
    items = files.map { |f| Extruder::Message.new File.open(f).read, {} }
  else
    files = ARGV
    items = files.map { |f| Extruder::Message.new File.open(f).read, {} }
end

runner = Extruder::QueueRunner.new config
runner.run(items)
